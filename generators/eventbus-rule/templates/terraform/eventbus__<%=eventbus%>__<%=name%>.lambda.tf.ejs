<%
  fullname  = `eventbus_${eventbus}_${name}`;
  rolename  = `${fullname}-lambda`;
  logname   = `${fullname}-log`;
%>
resource "aws_iam_role" "<%=rolename%>" {
    name = "${local.prefix}_<%=rolename%>"
    assume_role_policy = jsonencode({
        Version = "2012-10-17",
        Statement = [
            {
                Effect = "Allow",
                Principal = {
                    Service = "lambda.amazonaws.com"
                },
                Action = "sts:AssumeRole"
            }
        ]
    })
}

resource "aws_iam_role_policy_attachment" "<%=logname%>" {
    policy_arn              = aws_iam_policy.lambda-logs.arn
    role                    = aws_iam_role.<%=rolename%>.name
}

data "archive_file" "<%=fullname%>" {
    type                    = "zip"
    source_dir              = "${path.module}/../eventbus/<%=eventbus%>/<%=name%>"
    output_path             = "${path.module}/output/<%=fullname%>.zip"
}

resource "aws_lambda_function" "<%=fullname%>" {
    function_name           = "${local.prefix}_<%=fullname%>"
    runtime                 = "<%=runtime%>"
    handler                 = "index.handler"
    role                    = aws_iam_role.<%=rolename%>.arn
    filename                = data.archive_file.<%=fullname%>.output_path
    source_code_hash        = data.archive_file.<%=fullname%>.output_base64sha256
    timeout                 = local.lambda_timeout
    memory_size             = 128
<% if (vpc === "(none)") { -%>
    vpc_config {
        subnet_ids            = [ aws_vpc.<%=vpc%>.id ]
        security_group_ids    = [ aws_subnet.<%=vpc%>_A.id ]
    }
<% } -%>
    environment {
        variables = {
            PREFIX              = local.prefix
        }
    }
}

resource "aws_cloudwatch_log_group" "<%=logname%>" {
    name                  = "/aws/lambda/${local.prefix}_<%=fullname%>"
    retention_in_days     = local.log_retention_in_days
}

resource "aws_cloudwatch_event_target" "<%=fullname%>" {
  event_bus_name  = aws_cloudwatch_event_bus.<%=eventbus%>.name
  rule            = aws_cloudwatch_event_rule.<%=eventbus%>_<%=name%>.name
  target_id       = "ExecuteLambda"
  arn             = aws_lambda_function.<%=fullname%>.arn
}
