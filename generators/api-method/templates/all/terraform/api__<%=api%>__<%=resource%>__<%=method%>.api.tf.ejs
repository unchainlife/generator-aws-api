# ------------------------------------------------------------------------------
# <%=`${api} - ${method} ${resource}`%>
# ------------------------------------------------------------------------------
<%
    const fullname      = `${api}__${resource}__${method}`;
    const function_name = `api--${api}--${resource}--${method}`;
    const rolename      = `${fullname}__role`;
-%>

resource "aws_api_gateway_method" "<%=fullname%>" {
    rest_api_id   = aws_api_gateway_rest_api.<%=api%>.id
    resource_id   = aws_api_gateway_resource.<%=`${api}_${resource}`%>.id
    http_method   = "<%=method%>"
    authorization = "NONE"

    request_parameters = {
        "method.request.path.id" = true
    }
}

resource "aws_api_gateway_integration" "<%=fullname%>" {
    rest_api_id             = aws_api_gateway_rest_api.<%=api%>.id
<% if (resource) { -%>
    resource_id             = aws_api_gateway_resource.<%=`${api}_${resource}`%>.id
<% } else { -%>
    resource_id             = aws_api_gateway_rest_api.<%=api%>.root_resource_id
<% } -%>
    http_method             = aws_api_gateway_method.<%=fullname%>.http_method
    integration_http_method = "POST"
    type                    = "AWS_PROXY"
    uri                     = aws_lambda_function.<%=fullname%>.invoke_arn

    passthrough_behavior    = "WHEN_NO_TEMPLATES"
    content_handling        = "CONVERT_TO_TEXT"

    request_templates = {
        "application/json" = jsonencode({
            // id = "$input.params('id')"
        })
    }
}

resource "aws_lambda_permission" "<%=`${fullname}__lambda-permission`%>" {
    statement_id  = "AllowExecutionFromAPIGateway"
    action        = "lambda:InvokeFunction"
    function_name = aws_lambda_function.<%=fullname%>.function_name
    principal     = "apigateway.amazonaws.com"
    source_arn    = "arn:aws:execute-api:${local.region}:${var.assume_account}:${aws_api_gateway_rest_api.<%=api%>.id}/*/${aws_api_gateway_method.<%=fullname%>.http_method}${aws_api_gateway_resource.<%=`${api}_${resource}`%>.path}"
}

resource "aws_api_gateway_method_response" "<%=`${fullname}__200`%>" {
    rest_api_id = aws_api_gateway_rest_api.<%=api%>.id
    resource_id = aws_api_gateway_resource.<%=`${api}_${resource}`%>.id
    http_method = aws_api_gateway_method.<%=fullname%>.http_method
    status_code = "200"

    response_parameters = {
        "method.response.header.Access-Control-Allow-Origin"  = true
        "method.response.header.Access-Control-Allow-Methods" = true
        "method.response.header.Access-Control-Allow-Headers" = true
    }

    response_models = {
        "application/json"    = "Empty"
    }
}

resource "aws_api_gateway_integration_response" "<%=`${fullname}__200`%>" {
    rest_api_id = aws_api_gateway_rest_api.<%=api%>.id
    resource_id = aws_api_gateway_resource.<%=`${api}_${resource}`%>.id
    http_method = aws_api_gateway_method.<%=fullname%>.http_method
    status_code = aws_api_gateway_method_response.<%=`${fullname}__200`%>.status_code

    response_parameters = {
        "method.response.header.Access-Control-Allow-Origin"  = "'${local.AccessControlAllowOrigin}'"
        "method.response.header.Access-Control-Allow-Methods" = "'${local.AccessControlAllowMethods}'"
        "method.response.header.Access-Control-Allow-Headers" = "'${local.AccessControlAllowHeaders}'"
    }

    response_templates = {
        "application/json" = null
    }
}
