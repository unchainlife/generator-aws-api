command=$1
args=${@:2}
env=${ENV:-dev}

echo
echo "Environment: $env"

case $command in
  "validate")
  terraform -chdir=./terraform validate $args
  ;;

  "fmt")
  terraform -chdir=./terraform fmt $args
  ;;

  "init")
  terraform -chdir=./terraform workspace select $env || terraform workspace new $env
  terraform -chdir=./terraform init $args
  ;;

  "plan")
  terraform -chdir=./terraform workspace select $env || terraform workspace new $env
  terraform -chdir=./terraform init
  terraform -chdir=./terraform plan -var-file=./etc/dev.tfvars -out=./tfplan $args
  ;;

  "apply")
  terraform -chdir=./terraform workspace select $env || terraform workspace new $env
  terraform -chdir=./terraform init
  terraform -chdir=./terraform apply $args ./tfplan
  ;;

  "destroy")
  terraform -chdir=./terraform workspace select $env || terraform workspace new $env
  terraform -chdir=./terraform init
  terraform -chdir=./terraform destroy -var-file=./etc/dev.tfvars $args
  if [ $env != "default" ]; then
    terraform -chdir=./terraform workspace select default
    terraform -chdir=./terraform workspace delete $env
  fi
  ;;

  *)
  echo
  echo "$0 <command> [options]"
  echo
  echo "This helper script calls terraform, enforcing some conventions:"
  echo "  1. work from root directory"
  echo "  2. include workspaces"
  echo "  3. force plan files"
  echo
  echo "commands:"
  echo "  help      - this help screen"
  echo "  validate  - calls 'terraform validate'"
  echo "  fmt       - calls 'terraform fmt'"
  echo "  init      - calls 'terraform init'"
  echo "  plan      - calls 'terraform plan'"
  echo "  apply     - calls 'terraform apply'"
  echo "  destroy   - calls 'terraform destroy'"
  echo
  echo "environment variables:"
  echo "  ENV       - terraform workspace (default: 'dev')"
  echo
  ;;
esac
